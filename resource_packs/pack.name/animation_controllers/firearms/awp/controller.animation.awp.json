// Coded by @JustAsh0005 for ActualGuns3D, you aren't allowed to Edit, alter, modify, adapt, translate or otherwise change the whole code. 

{
	"format_version": "1.10.0",
	"animation_controllers": {
		"controller.animation.awp.first_person": {
			"initial_state": "draw",
			"states" : {
				"draw": {
					"animations": [
						{
							"awp.first_person.draw": "v.awp && v.is_first_person"
						}
					],
					"transitions": [
						{
							"first_person": "q.all_animations_finished && v.awp && v.is_first_person"
						}
					]
				},
				"first_person" : {
					"animations" : [
						{ 
						    "awp.first_person.holding": "v.is_first_person && v.awp"
						}
					],
					"transitions" : [
						{
							"aim": "v.is_first_person && v.awp && v.s"
						},
						{
							"sprinting": "v.is_first_person && v.awp && v.m && !v.r"
						},
						{
							"reloading": "v.is_first_person && v.is_holding_awpempty && v.r"
						},
						{
							"firing": "v.is_first_person && v.is_holding_awp && v.u"
						}
					],
					"blend_transition": 0.1,
					"blend_via_shortest_path": true
				},
				"firing": {
					"animations": [
						{
							"awp.first_person.fire": "v.is_first_person && v.is_holding_awp"
						}
					],
					"transitions": [
						{
							"first_person": "v.is_holding_awpempty && v.is_first_person"
						},
						{
							"draw": "!v.awp || v.is_third_person"
						},
						{
							"firing.delay": "v.is_first_person && v.is_holding_awp && q.all_animations_finished"
						}
					]
				},
				"firing.delay": {
					"on_entry": [ "v.t = q.life_time;" ],
					"animations": [
						{
							"awp.first_person.holding": "v.is_first_person && v.awp"
						}
					],
					"transitions": [
						{
							"firing": "(q.life_time - v.t) >= 99999999999 && v.is_holding_awp"
						},
						{
							"first_person": "v.is_first_person && (!v.is_holding_awp || v.is_holding_awpempty) || !v.u"
						},
						{
							"draw": "!v.awp || v.is_third_person"
						}
					]
				},
				"firing.aimed": {
					"animations": [
						{
							"awp.first_person.aim_fire": "v.is_first_person && v.is_holding_awp"
						}
					],
					"transitions": [
						{
							"aim": "v.is_holding_awpempty && v.is_first_person"
						},
						{
							"draw": "!v.awp || v.is_third_person"
						},
						{
							"firing.delay.aimed": "v.is_first_person && v.is_holding_awp && q.all_animations_finished"
						}
					]
				},
				"firing.delay.aimed": {
					"on_entry": [ "v.t = q.life_time;" ],
					"animations": [
						{
							"awp.first_person.aim": "v.is_first_person && v.awp"
						}
					],
					"transitions": [
						{
							"firing.aimed": "(q.life_time - v.t) >= 99999999999 && v.is_holding_awp"
						},
						{
							"aim": "v.is_first_person && (!v.is_holding_awp || v.is_holding_awpempty) || !v.u"
						},
						{
							"draw": "!v.awp || v.is_third_person"
						}
					]
				},
				"reloading": {
					"animations": [
						{
							"awp.first_person.reload": "v.is_first_person && v.awp"
						}
					],
					"transitions": [
						{
							"draw": "!v.awp || v.is_third_person"
						},
						{
							"first_person": "q.all_animations_finished && !v.r && v.awp"
						}
					],
					"blend_transition": 0.1,
					"blend_via_shortest_path": true
				},
				"sprinting": {
					"animations": [
						{
							"awp.first_person.sprinting": "v.is_first_person && v.awp"
						}
					],
					"transitions": [
						{
							"draw": "!v.awp || v.is_third_person"
						},
						{
							"aim": "v.is_first_person && v.awp && v.s"
						},
						{
							"first_person": "v.is_first_person && v.awp && !v.m"
						},
						{
							"reloading": "v.is_first_person && v.is_holding_awpempty && v.r"
						}
					],
					"blend_transition": 0.1,
					"blend_via_shortest_path": true
				},
				"aim": {
					"animations": [
						{
							"awp.first_person.aim": "v.is_first_person && v.awp"
						}
					],
					"transitions": [
						{
							"first_person": "v.is_first_person && v.awp && !v.s"
						},
						{
							"draw": "!v.awp || v.is_third_person"
						},
						{
							"firing.aimed": "v.is_first_person && v.is_holding_awp && v.u && v.s"
						}
					],
					"blend_transition": 0.1,
					"blend_via_shortest_path": true
				}
			}
		},
		"controller.animation.awp.third_person": {
			"initial_state": "draw",
			"states" : {
				"draw": {
					"animations": [
						{
							"awp.third_person.draw": "v.awp && v.is_third_person"
						}
					],
					"transitions": [
						{
							"third_person": "q.all_animations_finished && v.awp && v.is_third_person"
						}
					]
				},
				"third_person" : {
					"animations" : [
						{ 
						    "awp.third_person.holding": "v.is_third_person && v.awp"
						}
					],
					"transitions" : [
						{
							"aim": "v.is_third_person && v.awp && v.s"
						},
						{
							"sprinting": "v.is_third_person && v.awp && v.m && !v.r"
						},
						{
							"reloading": "v.is_third_person && v.is_holding_awpempty && v.r"
						},
						{
							"firing": "v.is_third_person && v.is_holding_awp && v.u"
						}
					],
					"blend_transition": 0.1,
					"blend_via_shortest_path": true
				},
				"firing": {
					"animations": [
						{
							"awp.third_person.fire": "v.is_third_person && v.is_holding_awp"
						}
					],
					"transitions": [
						{
							"third_person": "v.is_holding_awpempty && v.is_third_person"
						},
						{
							"draw": "!v.awp || v.is_first_person"
						},
						{
							"firing.delay": "v.is_third_person && v.is_holding_awp && q.all_animations_finished"
						}
					]
				},
				"firing.delay": {
					"on_entry": [ "v.t = q.life_time;" ],
					"animations": [
						{
							"awp.third_person.holding": "v.is_third_person && v.awp"
						}
					],
					"transitions": [
						{
							"firing": "(q.life_time - v.t) >= 99999999999 && v.is_holding_awp"
						},
						{
							"third_person": "v.is_third_person && (!v.is_holding_awp || v.is_holding_awpempty) || !v.u"
						},
						{
							"draw": "!v.awp || v.is_first_person"
						}
					]
				},
				"firing.aimed": {
					"animations": [
						{
							"awp.third_person.aim_fire": "v.is_third_person && v.is_holding_awp"
						}
					],
					"transitions": [
						{
							"aim": "v.is_holding_awpempty && v.is_third_person"
						},
						{
							"draw": "!v.awp || v.is_first_person"
						},
						{
							"firing.delay.aimed": "v.is_third_person && v.is_holding_awp && q.all_animations_finished"
						}
					]
				},
				"firing.delay.aimed": {
					"on_entry": [ "v.t = q.life_time;" ],
					"animations": [
						{
							"awp.third_person.aim": "v.is_third_person && v.awp"
						}
					],
					"transitions": [
						{
							"firing.aimed": "(q.life_time - v.t) >= 99999999999 && v.is_holding_awp"
						},
						{
							"aim": "v.is_third_person && (!v.is_holding_awp || v.is_holding_awpempty) || !v.u"
						},
						{
							"draw": "!v.awp || v.is_first_person"
						}
					]
				},
				"reloading": {
					"animations": [
						{
							"awp.third_person.reload": "v.is_third_person && v.awp"
						}
					],
					"transitions": [
						{
							"draw": "!v.awp || v.is_first_person"
						},
						{
							"third_person": "q.all_animations_finished && !v.r && v.awp"
						}
					],
					"blend_transition": 0.1,
					"blend_via_shortest_path": true
				},
				"sprinting": {
					"animations": [
						{
							"awp.third_person.sprinting": "v.is_third_person && v.awp"
						}
					],
					"transitions": [
						{
							"draw": "!v.awp || v.is_first_person"
						},
						{
							"aim": "v.is_third_person && v.awp && v.s"
						},
						{
							"third_person": "v.is_third_person && v.awp && !v.m"
						},
						{
							"reloading": "v.is_third_person && v.is_holding_awpempty && v.r"
						}
					],
					"blend_transition": 0.1,
					"blend_via_shortest_path": true
				},
				"aim": {
					"animations": [
						{
							"awp.third_person.aim": "v.is_third_person && v.awp"
						}
					],
					"transitions": [
						{
							"third_person": "v.is_third_person && v.awp && !v.s"
						},
						{
							"draw": "!v.awp || v.is_first_person"
						},
						{
							"firing.aimed": "v.is_third_person && v.is_holding_awp && v.u && v.s"
						}
					],
					"blend_transition": 0.1,
					"blend_via_shortest_path": true
				}
			}
		}
	}
}

// This code is exclusive to ActualGuns3D and can not be used by anybody else.